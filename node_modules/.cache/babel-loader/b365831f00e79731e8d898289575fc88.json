{"ast":null,"code":"var _jsxFileName = \"D:\\\\UI-Workspace\\\\google-map-react-app\\\\src\\\\components\\\\pages\\\\ChangePassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport AuthService from '../../services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePassword = () => {\n  _s();\n  var _errors$oldpassword, _errors$newpassword;\n  const currentUser = AuthService.getCurrentUser();\n  const [loading, setLoading] = useState(false);\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const validationSchema = Yup.object().shape({\n    oldpassword: Yup.string().required('Old password is required'),\n    newpassword: Yup.string().required('New Password is required').min(4, 'Password must be at least 4 characters').max(40, 'Password must not exceed 40 characters').notOneOf([Yup.ref('oldpassword'), null], 'New password must be different')\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const handleChangePassword = data => {\n    setMessage(\"\");\n    setSuccessful(false);\n    setLoading(true);\n    AuthService.changepassword(data.oldpassword, data.newpassword, currentUser.email).then(response => {\n      setMessage(\"You have successfully changed your password.\");\n      setSuccessful(true);\n      setLoading(false);\n      console.log(JSON.stringify(data, null, 2));\n      console.log(response.data);\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setMessage(resMessage);\n      setSuccessful(false);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header p-3 mb-2 bg-dark text-white\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleChangePassword),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"oldpassword\",\n              children: \"Old password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"oldpassword\",\n              ...register('oldpassword'),\n              className: `form-control ${errors.oldpassword ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$oldpassword = errors.oldpassword) === null || _errors$oldpassword === void 0 ? void 0 : _errors$oldpassword.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newpassword\",\n              children: \"New password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"newpassword\",\n              ...register('newpassword'),\n              className: `form-control ${errors.newpassword ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$newpassword = errors.newpassword) === null || _errors$newpassword === void 0 ? void 0 : _errors$newpassword.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-block\",\n              disabled: loading,\n              children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Update Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangePassword, \"NBgxgBxWzqlscuSq/jPU6HDgiBU=\", false, function () {\n  return [useForm];\n});\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","useForm","yupResolver","Yup","AuthService","ChangePassword","currentUser","getCurrentUser","loading","setLoading","successful","setSuccessful","message","setMessage","validationSchema","object","shape","oldpassword","string","required","newpassword","min","max","notOneOf","ref","register","handleSubmit","formState","errors","resolver","handleChangePassword","data","changepassword","email","then","response","console","log","JSON","stringify","error","resMessage","toString"],"sources":["D:/UI-Workspace/google-map-react-app/src/components/pages/ChangePassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport AuthService from '../../services/auth.service';\r\n\r\nconst ChangePassword = () => {\r\n\r\n  const currentUser = AuthService.getCurrentUser();\r\n  const [loading, setLoading] = useState(false);\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        oldpassword: Yup.string()\r\n        .required('Old password is required'),\r\n        newpassword: Yup.string()\r\n        .required('New Password is required')\r\n        .min(4, 'Password must be at least 4 characters')\r\n        .max(40, 'Password must not exceed 40 characters')\r\n        .notOneOf([Yup.ref('oldpassword'), null], 'New password must be different'),\r\n    });\r\n\r\n    const {\r\n      register,\r\n      handleSubmit,\r\n      formState: { errors }\r\n    } = useForm({\r\n      resolver: yupResolver(validationSchema)\r\n    });\r\n\r\n    const handleChangePassword = data =>{\r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n        setLoading(true);\r\n        AuthService.changepassword(data.oldpassword, data.newpassword, currentUser.email).then(response => {\r\n          setMessage(\"You have successfully changed your password.\");\r\n          setSuccessful(true);\r\n          setLoading(false);\r\n          console.log(JSON.stringify(data, null, 2));\r\n          console.log(response.data);  \r\n      },\r\n      (error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setMessage(resMessage);\r\n        setSuccessful(false);\r\n        setLoading(false);\r\n      }\r\n        );\r\n    }\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n      <div className=\"card-header p-3 mb-2 bg-dark text-white\">\r\n            Change Password\r\n      </div>\r\n        <form onSubmit={handleSubmit(handleChangePassword)}>     \r\n          <div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"oldpassword\">Old password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"oldpassword\"\r\n              {...register('oldpassword')}\r\n              className={`form-control ${errors.oldpassword ? 'is-invalid' : ''}`}\r\n            />\r\n             <div className=\"invalid-feedback\">{errors.oldpassword?.message}</div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"newpassword\">New password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"newpassword\"\r\n              {...register('newpassword')}\r\n              className={`form-control ${errors.newpassword ? 'is-invalid' : ''}`}\r\n            />\r\n             <div className=\"invalid-feedback\">{errors.newpassword?.message}</div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Update Password</span>\r\n            </button>\r\n          </div>\r\n          </div>\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ChangePassword"],"mappings":"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"},"metadata":{},"sourceType":"module"}