{"ast":null,"code":"var _jsxFileName = \"D:\\\\UI-Workspace\\\\google-map-react-app\\\\src\\\\components\\\\pages\\\\TestImagePreview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport UserServices from '../../services/UserServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestImagePreview = () => {\n  _s();\n  const [currentFile, setCurrentFile] = useState(undefined);\n  const [previewImage, setPreviewImage] = useState(undefined);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [imageInfos, setImageInfos] = useState([]);\n  const selectFile = event => {\n    setCurrentFile(event.target.files[0]);\n    setPreviewImage(URL.createObjectURL(event.target.files[0]));\n    setProgress(0);\n    setMessage(\"\");\n  };\n  useEffect(() => {\n    UploadService.getFiles().then(response => {\n      setImageInfos(response.data);\n    });\n  }, []);\n  const upload = () => {\n    setProgress(0);\n    UserServices.upload(currentFile, event => {\n      setProgress(Math.round(100 * event.loaded / event.total));\n    }).then(response => {\n      setMessage(response.data.message);\n      return UserServices.getFiles();\n    }).then(files => {\n      setImageInfos(files.data);\n    }).catch(err => {\n      setProgress(0);\n      if (err.response && err.response.data && err.response.data.message) {\n        setMessage(err.response.data.message);\n      } else {\n        setMessage(\"Could not upload the Image!\");\n      }\n      setCurrentFile(undefined);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"TestImagePreview\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(TestImagePreview, \"5cYJKlz8k1V+0djaONYNRgzGRk8=\");\n_c = TestImagePreview;\nexport default TestImagePreview;\nvar _c;\n$RefreshReg$(_c, \"TestImagePreview\");","map":{"version":3,"names":["React","useState","UserServices","TestImagePreview","currentFile","setCurrentFile","undefined","previewImage","setPreviewImage","progress","setProgress","message","setMessage","imageInfos","setImageInfos","selectFile","event","target","files","URL","createObjectURL","useEffect","UploadService","getFiles","then","response","data","upload","Math","round","loaded","total","catch","err"],"sources":["D:/UI-Workspace/google-map-react-app/src/components/pages/TestImagePreview.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport UserServices from '../../services/UserServices';\r\n\r\nconst TestImagePreview = () => {\r\n\r\n    const [currentFile, setCurrentFile] = useState(undefined);\r\n    const [previewImage, setPreviewImage] = useState(undefined);\r\n    const [progress, setProgress] = useState(0);\r\n    const [message, setMessage] = useState(\"\");\r\n  \r\n    const [imageInfos, setImageInfos] = useState([]);\r\n\r\n    const selectFile = (event) => {\r\n        setCurrentFile(event.target.files[0]);\r\n        setPreviewImage(URL.createObjectURL(event.target.files[0]));\r\n        setProgress(0);\r\n        setMessage(\"\");\r\n      };\r\n\r\n      useEffect(() => {\r\n        UploadService.getFiles().then((response) => {\r\n          setImageInfos(response.data);\r\n        });\r\n      }, []);\r\n      \r\n      const upload = () => {\r\n        setProgress(0);\r\n    \r\n        UserServices.upload(currentFile, (event) => {\r\n          setProgress(Math.round((100 * event.loaded) / event.total));\r\n        })\r\n          .then((response) => {\r\n            setMessage(response.data.message);\r\n            return UserServices.getFiles();\r\n          })\r\n          .then((files) => {\r\n            setImageInfos(files.data);\r\n          })\r\n          .catch((err) => {\r\n            setProgress(0);\r\n    \r\n            if (err.response && err.response.data && err.response.data.message) {\r\n              setMessage(err.response.data.message);\r\n            } else {\r\n              setMessage(\"Could not upload the Image!\");\r\n            }\r\n    \r\n            setCurrentFile(undefined);\r\n          });\r\n      };\r\n\r\n  return (\r\n    <div>TestImagePreview</div>\r\n  )\r\n}\r\n\r\nexport default TestImagePreview"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,6BAA6B;AAAC;AAEvD,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EAE3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAACK,SAAS,CAAC;EACzD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAACK,SAAS,CAAC;EAC3D,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMc,UAAU,GAAIC,KAAK,IAAK;IAC1BX,cAAc,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrCV,eAAe,CAACW,GAAG,CAACC,eAAe,CAACJ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3DR,WAAW,CAAC,CAAC,CAAC;IACdE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAEDS,SAAS,CAAC,MAAM;IACdC,aAAa,CAACC,QAAQ,EAAE,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC1CX,aAAa,CAACW,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAG,MAAM;IACnBjB,WAAW,CAAC,CAAC,CAAC;IAEdR,YAAY,CAACyB,MAAM,CAACvB,WAAW,EAAGY,KAAK,IAAK;MAC1CN,WAAW,CAACkB,IAAI,CAACC,KAAK,CAAE,GAAG,GAAGb,KAAK,CAACc,MAAM,GAAId,KAAK,CAACe,KAAK,CAAC,CAAC;IAC7D,CAAC,CAAC,CACCP,IAAI,CAAEC,QAAQ,IAAK;MAClBb,UAAU,CAACa,QAAQ,CAACC,IAAI,CAACf,OAAO,CAAC;MACjC,OAAOT,YAAY,CAACqB,QAAQ,EAAE;IAChC,CAAC,CAAC,CACDC,IAAI,CAAEN,KAAK,IAAK;MACfJ,aAAa,CAACI,KAAK,CAACQ,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;MACdvB,WAAW,CAAC,CAAC,CAAC;MAEd,IAAIuB,GAAG,CAACR,QAAQ,IAAIQ,GAAG,CAACR,QAAQ,CAACC,IAAI,IAAIO,GAAG,CAACR,QAAQ,CAACC,IAAI,CAACf,OAAO,EAAE;QAClEC,UAAU,CAACqB,GAAG,CAACR,QAAQ,CAACC,IAAI,CAACf,OAAO,CAAC;MACvC,CAAC,MAAM;QACLC,UAAU,CAAC,6BAA6B,CAAC;MAC3C;MAEAP,cAAc,CAACC,SAAS,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EAEL,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAA2B;AAE/B,CAAC;AAAA,GAnDKH,gBAAgB;AAAA,KAAhBA,gBAAgB;AAqDtB,eAAeA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}